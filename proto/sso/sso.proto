// proto/sso/sso.proto

syntax = "proto3";

package auth;

option go_package = "sso.v1;ssov1";
import "proto/httpProtos/annotations.proto";

service Auth {
  // Register registers a new user.
  rpc Register (RegisterRequest) returns (RegisterResponse){
    option (google.api.http) = {
      post: "/v1/registration";
      body: "*"
    };
  };
  // Login logs in a user and returns an auth token.
  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/login";
      body: "*"
    };
  };

  rpc Refresh (RefreshRequest) returns (RefreshResponse) {
    option (google.api.http) = {
      post: "/v1/refresh";
      body: "*";
      response_body: "accessToken"
    };
  }

  rpc Validate (ValidateRequest) returns (ValidateResponse) {}
}

message RegisterRequest {
  string username = 1; // Username of the user to register.
  string email = 2; // Email of the user to register.
  string password = 3; // Password of the user to register.
}

message RegisterResponse {
  int64 userId = 1;
}

message LoginRequest {
  string username = 1; // Username or email of the user to login
  string password = 2; // Password of the user to login
  int32 appId = 3;
}

message LoginResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

message RefreshRequest {
  string refreshToken = 1;
  int32 appId = 2;
}

message RefreshResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

message ValidateRequest {
  string accessToken = 1;
}

message ValidateResponse {
  ValidationStatus status = 1;
}

enum ValidationStatus {
  VALID = 0;
  INVALID = 1;
}